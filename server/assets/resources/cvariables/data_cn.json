{"sections":[{"id":"lesson","title":"课程","status":"","background":"","goals":9,"duration":15,"steps":["lesson","introductiontovariables","declareavariable","initializeavariable","combiningstep1andstep2","arithmeticoperators","chaining","userinput","challengetemperature1","challengetemperature2","review"]}],"steps":[{"section":"lesson","id":"lesson","goals":[],"html":"<x-step id=\"lesson\" goals=\"\"></x-step>"},{"id":"introductiontovariables","section":"lesson","goals":["next-0"],"html":"<x-step id=\"introductiontovariables\" goals=\"next-0\"><h2>介绍变量</h2><p>相信小伙伴们都见过这句话吧：<code>\"Hello World!\"</code> ，它的中文是“你好，世界”。它呢，只是一句展示的话，没有让我们输入，也没有做什么计算。这样似乎感觉没什么意思，有没有？我也想展示我想输入的内容，也想计算1+1等于多少？</p><p>而在我们的计算机世界中，你也不想一直看到“Hello World”吧，计算机，它是会自己做一些计算的。或者说，我们想要什么结果，通过输入某些数据就可以计算得到。</p><p>计算机是如何存储数据的呢，我们的一张美美的照片，一篇优美的文章word，甚至我们会玩的“我的世界”，都是在占用我们的存储空间的，就是我们会谈到的“硬盘”。</p><p>我们在打字的时候，计算机要读取我们输入的数据，存到哪里呢，就是存到我们说到的存储空间里，它会找到一块位置，就像我们的家园，占用了一块土地，这就是我们的家，于是就要引出我们这次的主题了——“<strong>变量</strong>”。</p><p><strong>变量</strong>，我们听着似乎很陌生，又感觉理解了它，从我们的理解，感觉到它是会变的，没错，它确实是会变的，但是它有自己的名字，就像我们的家，有固定的地址一样，这个是不会变的。</p><p>有自己的名字（地址），就意味着我有了自己的土地，可以种菜，可以玩耍，这就要看我们想干什么了。</p><p>在接下来的课程中，我们先学习一些C++的基本数据类型，如下所示：</p><ul> <li><p>int：整数</p></li><li><p>double：浮点数</p></li><li><p>char：单个字符</p></li><li><p>string：字符序列</p></li><li><p>bool：正确/错误值</p></li></ul> <p>我们可以看到，我们的变量呢，有很多<strong>类型</strong>：有的可以存数字，有的可以存字母，有的可以存一句话，有的还可以判断是不是正确的。它主要告诉我们，我们需要多大的土地，并且这片土地你可以用来干嘛。</p><h4>使用说明</h4><p>观看下图，老师为你们做了一个小总结：</p><div class=\"row padded\"><div style=\"width: 1000px\"> <x-img src=\"/resources/cvariables/images/datatypes.gif\" width=\"1000\" height=\"880\"></x-img></div></div> <p>看完就可以点击下一步啦~</p><p><button class=\"next-step\"> Continue</button> </p></x-step>"},{"id":"declareavariable","section":"lesson","goals":["next-0"],"html":"<x-step id=\"declareavariable\" goals=\"next-0\"><h2>步骤 1: 声明一个变量</h2><pre class=\"language-c++\"><code>\"Every variable in C++ must be declared before it can be used!\"</code></pre><p>假设我们正在开发一款游戏，并且希望时刻能够知道玩家得了多少分，得分从0到10。那么此时就需要一个变量去保存它！</p><p>我们要使用变量，那肯定就要先声明或创建它，不然没法使用的。 要声明变量，我们需要做两件事：</p><ul> <li><p>变量的种类。</p></li><li><p>变量的名称。</p></li></ul> <p>通常来说，我们说分数是整数的吧，比如说1分，2分，3分，10分，100分。那么此时此刻，我们也需要给分数声明一个这样的整数变量，我们可以这样写（如下框所示）：</p><pre class=\"language-c++\"><code>int score;</code></pre><ul> <li><p><code>int</code> 是变量的类型。</p></li><li><p><code>score</code> 是变量的名称。</p></li><li><p><code>;</code> 是我们结束语句的方式。</p></li><li><p>要注意，在C++中，变量名只能是：字母，数字、下划线。</p></li></ul> <p><strong>注意</strong>：C++被称为强类型语言。如果您一定要给整数类型赋值一个只有一串数字，您可能会得到一个警告，或者错误的提示。</p><h4>使用说明</h4><p><input id=\"declareavariable\" type=\"checkbox\" disabled=\"disabled\"> 1.在variable.cpp文件中，声明一个名字为year的int变量。</p><p><input id=\"declareavariable\" type=\"checkbox\" disabled=\"disabled\"> 2.当你输入完成上面的要求后，在编辑器，输入下面的命令，然后按一下 <code>enter</code> 键:</p><p>编译:</p><pre class=\"language-c++\"><code>g++ variable.cpp</code></pre><p>执行:</p><pre class=\"language-c++\"><code>./a.out</code></pre><p>当你执行完成时，那么恭喜你，你的程序就没有错误了。</p><p><button class=\"next-step\"> Continue</button> </p></x-step>"},{"id":"initializeavariable","section":"lesson","goals":["next-0"],"html":"<x-step id=\"initializeavariable\" goals=\"next-0\"><h2>步骤 2: 初始化变量</h2><p>我们既然声明了一个变量，那么我们就可以给它赋一个值了！</p><p>假设我们声明了一个名为 <code>score</code> ，类型为 <code>int</code> 的变量，并将它的值设置为0，我们可以这样简单的写：</p><pre class=\"language-c++\"><code>score = 0;</code></pre><p><code>score</code> 是变量的名称。</p><p><code>=</code> 表示分配，或者说是给变量赋值。</p><p><code>0</code> 是要存储在变量中的值，也就是变量的值。</p><p><strong>注意</strong>：在C++中，一个等号 = 并不表示 “等于” 。 它的意思是“分配”或者说“赋值”。 在上面的代码中，我们为score变量分配了“0”值。</p><h4>使用说明</h4><p><input id=\"initializeavariable\" type=\"checkbox\" disabled=\"disabled\"> 1.在 <strong>variable.cpp</strong> 文件中，您声明了一个名为 <code>year</code> 的 <code>int</code> 变量。</p><p>现在我们需要将它的值变成2020。</p><p><input id=\"initializeavariable\" type=\"checkbox\" disabled=\"disabled\"> 2.当你输入完成上面的要求后，在编辑器，输入下面的命令，然后按一下 <code>enter</code> 键:</p><p>编译:</p><pre class=\"language-c++\"><code>g++ variable.cpp</code></pre><p>执行:</p><pre class=\"language-c++\"><code>./a.out</code></pre><p><button class=\"next-step\"> Continue</button> </p></x-step>"},{"id":"combiningstep1andstep2","section":"lesson","goals":["next-0"],"html":"<x-step id=\"combiningstep1andstep2\" goals=\"next-0\"><h2>结合步骤1和步骤2</h2><p>我们可以在单个初始化语句中，声明一个变量，并为这个变量赋值。</p><p>假设我们有这两行：</p><pre class=\"language-c++\"><code>// Declare a variable\nint score;\n\n// Initialize a variable\nscore = 0;</code></pre><p>实际上，我们可以将这两行合并为一行代码，如下所示：</p><pre class=\"language-c++\"><code>int score = 0;</code></pre><p>这个意思就是说，我们要声明一个名为 <code>score</code> 的整数变量，并且将它的值设置为0。</p><div class=\"row padded\"><div style=\"width: 600px\"> <x-img src=\"/resources/cvariables/images/combiningstep1andstep2.png\" width=\"600\" height=\"340\"></x-img></div></div> <p><strong>注意</strong>：我们只需要声明一次变量就可以啦！ 强烈建议先初始化变量，然后我们再去使用它。</p><h4>使用说明</h4><p><input id=\"combiningstep1andstep2\" type=\"checkbox\" disabled=\"disabled\"> 1.在你的程序中，请声明一个变量，并且初始化它，要求名为 <code>year</code> ，类型是 <code>int</code> ，并将它的值，初始化为2020。</p><p>现在我们需要将它的值变成2020。</p><p><input id=\"combiningstep1andstep2\" type=\"checkbox\" disabled=\"disabled\"> 2.当你输入完成上面的要求后，在编辑器，输入下面的命令，然后按一下 <code>enter</code> 键:</p><p>编译:</p><pre class=\"language-c++\"><code>g++ variable.cpp</code></pre><p>执行:</p><pre class=\"language-c++\"><code>./a.out</code></pre><p><button class=\"next-step\"> Continue</button> </p></x-step>"},{"id":"arithmeticoperators","section":"lesson","goals":["next-0"],"html":"<x-step id=\"arithmeticoperators\" goals=\"next-0\"><h2>算术运算符</h2><p>在上几节，我们了解到，计算机如果需要存储一个变量，需要一开始的时候就要声明，对吧？</p><p>那么，它既然有了变量了，总不能攒着它，一直占内存吧，肯定会有什么用？</p><p>而我们应该知道，计算机在计算数据的方面是比人脑要快好多好多倍的。那么，我们现在就让计算机和我们的变量开始一起计算吧！</p><p>以下呢，是一些常见的算术运算符：</p><ul> <li><p><code>+</code> 加</p></li><li><p><code>-</code> 减</p></li><li><p><code>*</code> 乘</p></li><li><p><code>/</code> 除</p></li><li><p><code>%</code> 模（除并得到余数）</p></li></ul> <p>如下代码:</p><pre class=\"language-c++\"><code>int score = 0;\n// score is 0\n\nscore = 4 + 2;\n// it is now 6\n\nscore = 4 - 2;\n// it is now 2\n\nscore = 4 * 2;\n// it is now 8\n\nscore = 4 / 2;\n// and now 2\n\nscore = 5 % 2;\n// and now 1</code></pre><p><strong>注意</strong>：我们可以通过添加括号来先操作某一个程序。 例如，在 <code>score = 5 *（4 + 3）</code> 中，可以使用括号将 <code>score</code> 得到 <code>5 * 7</code> 而不是 <code> 5 * 4 + 3</code> 而得到了 <code>23</code> 。</p><h4>使用说明</h4><p><input id=\"arithmeticoperators\" type=\"checkbox\" disabled=\"disabled\"> 1.在 <strong>math.cpp</strong>中，我们已经为你声明了一个变量，名为 <code>score</code> ，并做了初始化。</p><p>让我们给1234乘以99，来改变一下它的值。</p><p><input id=\"arithmeticoperators\" type=\"checkbox\" disabled=\"disabled\"> 2.但是我们怎么知道那个值是什么呢？</p><p>你只需要，在下面添加以下代码，即可输出值：</p><pre class=\"language-c++\"><code>std::cout &lt;&lt; score &lt;&lt; \"\\n\";</code></pre><p>请注意，当我们要输出这个变量时，我们不需要在变量名的两边写双引号。</p><p><input id=\"arithmeticoperators\" type=\"checkbox\" disabled=\"disabled\"> 3.使用编辑器，编译并执行程序。</p><div id=\"ide\"><pre class=\"initcode\">#include <iostream>\nusing namespace std;\n\nint main() {\n\n  int score = 45;\n\n  // Change score here:\n  score=45 + 5;\n  cout&lt;&lt; score &lt;&lt;\"\\n\";\n  \n}</iostream></pre><iframe src=\"http://114.116.82.25:7000/#/exercise?language=cpp\" scrolling=\"no\" style=\"width: 100%; height: 500px; border: none;\"></iframe></div><p><button class=\"next-step\"> Continue</button> </p></x-step>"},{"id":"chaining","section":"lesson","goals":["next-0"],"html":"<x-step id=\"chaining\" goals=\"next-0\"><h2>链式</h2><p>现在，我们已经输出了一个变量，并且还使用 <code>cout</code> 输出了多个值。让我们再仔细看看 <code>cout</code> 。</p><p>如果我们有以下代码：</p><pre class=\"language-c++\"><code>int age = 28;\n\nstd::cout &lt;&lt; \"Hello, I am \";\nstd::cout &lt;&lt; age;\nstd::cout &lt;&lt; \" years old\\n\";</code></pre><p>它的输出结果是:</p><pre class=\"language-c++\"><code>Hello, I am 28 years old</code></pre><p>请注意，我们为什么要在 <code>“Hello, I am”</code> 这一串字符的两边使用双引号，但在 <code>age</code> 两边却不用呢。</p><p>当我们需要文字，或者字符串的时候，这个时候就需要用到引号了。</p><p>当我们使用变量名，来输出某个值时，我们就不需要使用引号。</p><p>因此，那我们是不是可以在一行内，通过 <code>cout</code> 语句，编写出来呢？</p><p>是的，您可以使用多个 <code>&lt;&lt;</code> 运算符来把需要输出的内容，连接在一起。</p><p>对于上面所说的，你可以这样实现：</p><pre class=\"language-c++\"><code>int age = 28;\n\nstd::cout &lt;&lt; \"Hello, I am \" &lt;&lt; age &lt;&lt; \" years old\\n\";</code></pre><p>这个，就称为链式。</p><p>使用说明</p><p><input id=\"chaining\" type=\"checkbox\" disabled=\"disabled\"> 1.在<strong>game.cpp</strong>文件里，我们已经声明了一个变量，名为 <code>score</code> ，数据类型为 <code>int</code> ，并且为它做了初始化。</p><p>现在使用链式输出下面的内容：</p><pre class=\"language-c++\"><code>Player score: [score]</code></pre><p>本来 <code>[score]</code> 应该是，变量 <code>score</code> 的值。</p><p>感觉没什么错了，就添加一个新行！</p><p>检查两遍，就可以通过了</p><p><input id=\"chaining\" type=\"checkbox\" disabled=\"disabled\"> 2.使用编辑器，编译并执行程序。</p><p><button class=\"next-step\"> Continue</button> </p></x-step>"},{"id":"userinput","section":"lesson","goals":["next-0"],"html":"<x-step id=\"userinput\" goals=\"next-0\"><h2>用户输入</h2><p>就像我们在介绍中提到的变量，它们的值是通过我们在键盘上敲一些字符，才得到的，这个就是我们提到的用户输入。</p><p>我们在键盘上输入了一些字符后，通过按下 <code>enter</code> 键，我们的程序就能收到，它就能做其他的操作了。</p><p>我们在前面也看到过了，C++是通过 <code>cout</code> 来输出我们想要的数据，而通过 <code>cin</code> 是我们输入的数据，或者说我们想让变量成为我们设定的值。</p><pre class=\"language-c++\"><code>std::cout &lt;&lt; \"Enter your password: \";\nstd::cin &gt;&gt; password;</code></pre><p> <code>cin</code> 这个单词，代表的就是标准的输入流，也就是说，我们想要输入的数据能让计算机读懂，需要通过它来表示出来（它的读音，就是 see-in 这样读）。通常来说，我们如果有 <code>cin</code> ，就需要后面跟着一个 <code>&gt;&gt;</code> 符号，它的作用呢，就是为了起到了，为了给输入的数据，指定一个位置</p><p>想知道它的工作原理吗？想知道的话，我们就要使用一下这个程序。</p><h4>使用说明</h4><p><input id=\"userinput\" type=\"checkbox\" disabled=\"disabled\"> 1.将下面的代码在我们的编辑器中写入:</p><pre class=\"language-c++\"><code>std::cin &gt;&gt; tip;</code></pre><p>这样，用户在键盘上输入的一些数据，就通过 <code>enter</code> 让程序读到它。并且呢，我们现在有 <code>tip</code> 变量，数据类型为 <code>int</code> ,程序会将我们输入的数据，赋值给 <code>tip</code> 。</p><p><input id=\"userinput\" type=\"checkbox\" disabled=\"disabled\"> 2.让我们通过链表，来将下面的数据，输出来。</p><pre class=\"language-c++\"><code>You paid [tip] dollars.</code></pre><p><code>[tip]</code> 应该是 变量 <code>tip</code> 的值。</p><p>确保将新的一行，添加到了输出端。</p><p><input id=\"userinput\" type=\"checkbox\" disabled=\"disabled\"> 3.我们使用编辑器，编译、并执行我们的程序。</p><p>然后，我们的编辑器应该是这个样子：</p><pre class=\"language-c++\"><code>$ g++ tip.cpp\n$ ./a.out\nEnter a tip amount: </code></pre><p>在我们的编辑器上，输入一个数字，然后按 <code>enter</code> 结束。</p><div id=\"ide\"><pre class=\"initcode\">#include <iostream>\n\nint main() {\n  \n  int tip = 0;\n  \n  std::cout &lt;&lt; \"Enter tip amount: \";\n  \n  std::cin &gt;&gt; tip;\n  \n  \n}</iostream></pre><iframe src=\"http://114.116.82.25:7000/#/exercise?language=cpp\" scrolling=\"no\" style=\"width: 100%; height: 500px; border: none;\"></iframe></div><p><button class=\"next-step\"> Continue</button> </p></x-step>"},{"id":"challengetemperature1","section":"lesson","goals":["next-0"],"html":"<x-step id=\"challengetemperature1\" goals=\"next-0\"><h2>挑战一下：温度（第1部分）</h2><p>现在，相信同学们已经了解了变量，以及 <code>cin</code> 输入流。有这些基础，我们就可以编写一个程序啦！</p><p>曾经，有位疯狂的科学家，叫开尔文（Kelvin），有一次，他在山腰的气象实验室里，熟练地预测了天气。</p><p>最近，开尔文（Kelvin）开始在他的网站上，发布了天气预报，但是存在一个问题：他的所有天气预报，都以华氏（F）温度为单位，进行描述。</p><p>我们通常说温度，都是用的摄氏（C），很少有人能把华氏转换成摄氏。那么，我们通过计算机就可以实现这个过程。</p><p>让我们将温度从华氏（F）转换为摄氏（C），是有个公式的。公式如下：</p><p>C=(F−32)/1.8</p><h4>使用说明</h4><p><input id=\"challengetemperature1\" type=\"checkbox\" disabled=\"disabled\"> 1.首先，我们使用谷歌或者百度，看一下现在，北京的温度，是多少华氏温度的。</p><p>声明一个名称为 <code>tempf</code> 数据类型为 <code>double</code> 的变量，并让它做为温度的代表，对它做一个初始化。</p><p>声明另一个，名称为 <code>tempc</code> 数据类型为 <code>double</code> 的变量，</p><p><input id=\"challengetemperature1\" type=\"checkbox\" disabled=\"disabled\"> 2.将华氏温度，转换成摄氏温度。</p><p>并且要讲摄氏温度的值，存到 <code>tempc</code> 里。</p><p><input id=\"challengetemperature1\" type=\"checkbox\" disabled=\"disabled\"> 3.展示这个结果。</p><p>输出以下内容:</p><pre class=\"language-c++\"><code>The temp is [tempc] degrees Celsius.</code></pre><p>不要忘记，在这句话最后面，加一个换行符 <code>\\n</code> ，这个是让我们的数据，单独占据一行。</p><p><input id=\"challengetemperature1\" type=\"checkbox\" disabled=\"disabled\"> 4.使用编辑器，编译并执行我们的程序。</p><div id=\"ide\"><pre class=\"initcode\">#include <iostream>\n\nint main() {\n  \n  \n  \n  \n  \n  \n  \n  \n}</iostream></pre><iframe src=\"http://114.116.82.25:7000/#/exercise?language=cpp\" scrolling=\"no\" style=\"width: 100%; height: 500px; border: none;\"></iframe></div><p><button class=\"next-step\"> Continue</button> </p></x-step>"},{"id":"challengetemperature2","section":"lesson","goals":["next-0"],"html":"<x-step id=\"challengetemperature2\" goals=\"next-0\"><h2>挑战一下：温度（第2部分）</h2><p>让我们回到我们刚刚写过的 <strong>temperature.cpp</strong> 。我们不要像下面这样，直接赋值给 <code>tempf</code> 一个温度值。</p><pre class=\"language-c++\"><code>tempf = 83;</code></pre><p>让我们使用 <code>cin</code> 来输入一个当前温度值!</p><h4>使用说明</h4><p><input id=\"challengetemperature2\" type=\"checkbox\" disabled=\"disabled\"> 1.使用 <code>std::cout</code> 作为一个提示，告诉用户 “输入一个华氏温度”。</p><p>And get their input using <code>std::cin</code> and store it in <span class=\"nowrap\"><code>tempf</code>.</span> 然后使用 <code>std::cin</code> 来获取他们输入的值，并将这个值存储在 <code>tempf</code> 中。</p><p>检查两遍，可以通过了。</p><p><input id=\"challengetemperature2\" type=\"checkbox\" disabled=\"disabled\"> 2.使用编辑器，编译并执行程序。</p><div id=\"ide\"><pre class=\"initcode\">#include <iostream>\n\nint main() {\n  \n  double tempf;\n  double tempc;\n  \n  // Ask the user\n  \n  \n  \n  tempc = (tempf - 32) / 1.8;\n  \n  std::cout &lt;&lt; \"The temp is \" &lt;&lt; tempc &lt;&lt; \" degrees Celsius.\\n\";\n  \n}</iostream></pre><iframe src=\"http://114.116.82.25:7000/#/exercise?language=cpp\" scrolling=\"no\" style=\"width: 100%; height: 500px; border: none;\"></iframe></div><p><button class=\"next-step\"> Continue</button> </p></x-step>"},{"id":"review","section":"lesson","goals":[],"html":"<x-step id=\"review\" goals=\"\"><h2>总结</h2><p>恭喜你，你已经完成了本课的学习。为你鼓鼓掌。🙌</p><p>我们来做一下课前的回顾吧：</p><ul> <li><p>一个变量，在计算机中，是占用一块特定内存的。而且占用了内存之后，就可以做一些其他的操作，比如存储值，使用这个数据等等。</p></li><li><p>C ++基本数据类型包括：</p></li></ul> <p><code>int</code> : 整型</p><p><code>double</code> : 浮点数（我们俗称的小数）</p><p><code>char</code> : 单个字符</p><p><code>string</code> : 多个字符组成的串</p><p><code>bool</code> : 逻辑型（正确/错误）</p><ul> <li><p>一个等号 <code>=</code> 表示赋值，而不是数学意义上的相等。</p></li><li><p><code>cin</code> 是可以从用户的输入来获取数据。</p></li></ul> <h4>使用说明</h4><p><input id=\"review\" type=\"checkbox\" disabled=\"disabled\"> 1.附加题：我们身体是不是健康的呢？我们都不确定，有的人说很健康，有的人却不健康，我们如果要科学的定义我们的身体健康程度，有一个词，大家应该了解一下，那这个词就是 “身体质量指数（BMI）” 。这个词呢，可以用来检测我们人体的脂肪的。</p><p>这个词呢，是有一个公式的，如下所示：</p><x-img src=\"/resources/cvariables/images/bmi.png\" width=\"450\" height=\"270\"></x-img><p>它将通过人的体重（我们一般说人的体重是多少公斤，也就是多少kg，而这里就是使用了kg，作为单位），除以我们的 <code>身高的平方</code> 来计算（身高是用 m 来做计算的）。</p><p>完成 <strong>bmi.cpp</strong> 程序。</p><p>(你也可以直接运行该代码，我们为你提供了源代码)</p><div id=\"ide\"><pre class=\"initcode\">#include <iostream>\n\nint main() {\n  \n  double height, weight, bmi;\n  \n  // Ask user for their height\n  \n  std::cout &lt;&lt; \"Type in your height (m): \";\n  std::cin &gt;&gt; height;\n  \n  // Now ask the user for their weight and calculate BMI\n  std::cout &lt;&lt; \"Type in your weight(kg): \";\n  std::cin &gt;&gt; weight;\n\n  bmi=weight/height*height;\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  return 0;\n\n}</iostream></pre><iframe src=\"http://114.116.82.25:7000/#/exercise?language=cpp\" scrolling=\"no\" style=\"width: 100%; height: 500px; border: none;\"></iframe></div></x-step>"}],"goals":9,"title":"变量"}