{"sections":[{"id":"introductiontovariables","title":"变量","status":"","background":"","goals":0,"duration":5,"steps":["introductiontovariables"]},{"id":"introdutedatatype","title":"数据类型","status":"","background":"","goals":3,"duration":5,"steps":["introdutedatatype"]},{"id":"declareaandinitializeavariable","title":"声明并初始化变量","status":"","background":"","goals":8,"duration":10,"steps":["declareaandinitializeavariable","declareavariable","initializeavariable","declareainitializeavariable"]},{"id":"arithmeticoperators","title":"算术运算符","status":"","background":"","goals":0,"duration":5,"steps":["arithmeticoperators"]},{"id":"chaining","title":"综合输出","status":"","background":"","goals":0,"duration":5,"steps":["chaining"]},{"id":"userinput","title":"用户输入","status":"","background":"","goals":0,"duration":5,"steps":["userinput"]},{"id":"challengetemperature1","title":"挑战一下：温度（第1部分）","status":"","background":"","goals":0,"duration":5,"steps":["challengetemperature1"]},{"id":"challengetemperature2","title":"挑战一下：温度（第2部分）","status":"","background":"","goals":0,"duration":5,"steps":["challengetemperature2"]},{"id":"review","title":"小结","status":"","background":"","goals":5,"duration":5,"steps":["review"]},{"id":"additionalquestions","title":"附加题：健康质量指数","status":"","background":"","goals":0,"duration":5,"steps":["additionalquestions"]},{"id":"test","title":"测试","status":"","background":"","goals":19,"duration":15,"steps":["test"]}],"steps":[{"id":"introductiontovariables","section":"introductiontovariables","goals":[],"html":"<x-step id=\"introductiontovariables\" goals=\"\"><div class=\"row padded\"><div class=\"grow\"> <p><span class=\"sentence\">经过我们上一堂课的介绍，大家都应该知道了C++的一些基本介绍，其中它可以做很多有趣的事情。</span></p><p><span class=\"sentence\">而从本章开始，我们就要正式进入C++的学习之旅啦~</span></p><p><span class=\"sentence\">不知道同学们知不知道，“贪吃蛇” 这款小游戏。没玩过也没关系，老师会通过游戏来介绍变量。</span></p></div><div style=\"width: 400px\"> <x-img src=\"/resources/cvariables/images/tstart.gif\" width=\"400\" height=\"400\"></x-img></div></div> <p><span class=\"sentence\">假设我们玩一个游戏，我们需要有一个自己的昵称，还需要有一个最后的得分，才能记录下谁得了多少分。</span></p><p><span class=\"sentence\">此时，我们知道，每次玩游戏的时候，每个人的<strong>名字</strong>和他的<strong>分数</strong>有可能是不一样的。这种变化的数据就可以看做<strong>变量</strong>。</span></p><div class=\"row padded\"><div style=\"width: 500px\"> <x-img src=\"/resources/cvariables/images/tname.jpg\" width=\"500\" height=\"500\"></x-img></div><div style=\"width: 500px\"> <x-img src=\"/resources/cvariables/images/tsun.jpg\" width=\"500\" height=\"500\"></x-img></div></div> <p><span class=\"sentence\">变量，可以是贪吃蛇的长度，可以是最后的得分，或者是玩家的名字，等等。</span></p><p><span class=\"sentence\">那这些变量数据需要保存到哪里呢？答案就是保存在计算机的存储空间里。大家可以把它想成一个楼房，每一户都会有门牌号，每一户的家里都会住着人。把人比作数据（变量值），把每户的门牌号比作数据的标识（变量名）。</span></p><p><span class=\"sentence\"><strong>提示</strong> ：变量，用一句话来说，就好比一个 “ 容器 ” ，而变量的数据，就需要盛放在 “ 容器 ” 中。</span></p><div class=\"row padded\"><div style=\"width: 400px\"> <x-img src=\"/resources/cvariables/images/peng.jpg\" width=\"400\" height=\"300\"></x-img></div></div> </x-step>"},{"id":"introdutedatatype","section":"introdutedatatype","goals":["slider-0","slider-1","slider-2"],"html":"<x-step id=\"introdutedatatype\" goals=\"slider-0 slider-1 slider-2\"><p><span class=\"sentence\">同学们想过吗，数据占据了计算机的存储空间，但是这些数据具体是怎么存储的？每个数据占据的空间大小都一样吗？</span></p><p><span class=\"sentence\">其实在计算机中，数据最终都要转换成两个符号存储的，<code>0</code> 和 <code>1</code> （也就是我们说的二进制）。同学们需要了解一下，数据转换之前，字符类型是由ASCII码存储的，数值类型是通过二进制的原码，反码和补码存储的。它们存储的类型是不一样的。</span></p><p><span class=\"sentence\">不同类型的数据，占据的空间可能不一样，计算机为了识别和存储这些数据，于是就出现了数据类型的概念。为它们做个标记，便于计算机存储。</span></p><div class=\"row padded\"><div style=\"width: 500px\"> <x-img src=\"/resources/cvariables/images/ejz.jpg\" width=\"500\" height=\"300\"></x-img></div><div style=\"width: 500px\"> <x-img src=\"/resources/cvariables/images/ascii.jpg\" width=\"500\" height=\"400\"></x-img></div></div> <p><span class=\"sentence\">在我们玩 “ 贪吃蛇 ” 的时候，需要操控蛇去吃食物，来提高得分。而我们得到的分数：1、2、3...100，这些数值，让我们很容易想到数学中的整数，其实在计算机中，可以看做是数据类型中的整型；</span></p><p><span class=\"sentence\">还有，玩 “ 贪吃蛇 ” 之前，需要我们输入一个昵称，而昵称是由一串字符串组成的。这就可以看做是数据类型中的字符串型；</span></p><p><span class=\"sentence\">其实在C++中，数据类型有很多种，我们在这里了解一些基本的数据类型：</span></p><ul> <li><span class=\"sentence\"><p><span class=\"sentence\">整型：int（ 比如 ：1 ）</span></p></span></li><li><span class=\"sentence\"><p><span class=\"sentence\">浮点型：double（ 比如 ： 1.10 ）</span></p></span></li><li><span class=\"sentence\"><p><span class=\"sentence\">单个字符类型：char（ 比如 ： c ）</span></p></span></li><li><span class=\"sentence\"><p><span class=\"sentence\">字符串类型：string（ 比如 ： camluni ）</span></p></span></li><li><span class=\"sentence\"><p><span class=\"sentence\">布尔类型：bool（ 它的值只有两个：真/假 ）</span></p></span></li></ul> <p><span class=\"sentence\">在本章节，我们主要具体学习下整型，浮点型。</span></p><h4>整型</h4><p><span class=\"sentence\">在生活中，人的个数，楼层的层数，都是整数的例子。</span></p><p><span class=\"sentence\">在C++中，由于计算机的存储数的长度、大小都不一样，所以整型有很多种类。而整型的默认类型是 <code>int</code> ，它在计算机的存储空间中占了4B。还有一个需要大家知道，就是 <code>long long</code> 类型，它在计算机的存储空间中占了8B。</span></p><h4>浮点型</h4><p><span class=\"sentence\">在生活中，我们在网购，买东西的时候，需要花钱，有时候可能是9.9，那这就是小数。</span></p><p><span class=\"sentence\">在C++中，浮点型也叫小数。而浮点型的默认类型是 <code>double</code> ，它在计算机的存储空间中占了8B。它还有一个类型是float，它在计算机的存储空间中占了4B。但是它没有double精确，我们基本使用的就是 double。</span></p><h4>使用说明</h4><p><span class=\"sentence\">我们现在知道了，C++的 <strong>数据类型</strong> 有很多种：数字、小数、单个字母、一句话，甚至可以判断是不是正确的，老师特地给同学们，做了一个动画，同学们可以玩一玩，点击每个三角按钮，观察它们的变化：</span></p><div class=\"content-center\" style=\"display: flex;width: 770px\"> <div style=\"flex: 1;\"><svg class=\"content-center\" id=\"int-grid\" width=\"350\" height=\"350\"><image id=\"bucket\" xlink:href=\"/resources/cvariables/images/back-img-3.png\" x=\"0\" y=\"0\" height=\"100%\" width=\"100%\"></image><image class=\"ball\" id=\"ball-1\" xlink:href=\"/resources/cvariables/images/ball-1.png\" x=\"43\" y=\"123\" height=\"35px\" width=\"35px\"></image><image class=\"ball\" id=\"ball-2\" xlink:href=\"/resources/cvariables/images/ball-1.png\" x=\"73\" y=\"123\" height=\"35px\" width=\"35px\"></image><image class=\"ball\" id=\"ball-3\" xlink:href=\"/resources/cvariables/images/ball-1.png\" x=\"103\" y=\"123\" height=\"35px\" width=\"35px\"></image><image class=\"ball\" id=\"ball-4\" xlink:href=\"/resources/cvariables/images/ball-1.png\" x=\"125\" y=\"102\" height=\"35px\" width=\"35px\"></image><image class=\"ball\" id=\"ball-5\" xlink:href=\"/resources/cvariables/images/ball-1.png\" x=\"58\" y=\"97\" height=\"35px\" width=\"35px\"></image><image class=\"ball\" id=\"ball-6\" xlink:href=\"/resources/cvariables/images/ball-1.png\" x=\"88\" y=\"97\" height=\"35px\" width=\"35px\"></image><image class=\"ball\" id=\"ball-7\" xlink:href=\"/resources/cvariables/images/ball-1.png\" x=\"28\" y=\"97\" height=\"35px\" width=\"35px\"></image><image class=\"ball\" id=\"ball-8\" xlink:href=\"/resources/cvariables/images/ball-1.png\" x=\"43\" y=\"71\" height=\"35px\" width=\"35px\"></image><image class=\"ball\" id=\"ball-9\" xlink:href=\"/resources/cvariables/images/ball-1.png\" x=\"74\" y=\"71\" height=\"35px\" width=\"35px\"></image><image class=\"ball\" id=\"ball-10\" xlink:href=\"/resources/cvariables/images/ball-1.png\" x=\"110\" y=\"76\" height=\"35px\" width=\"35px\"></image></svg><p id=\"p-int\"><span class=\"sentence\">x<sub>1</sub>&nbsp;=&nbsp;<span id=\"span-int\"><strong>0</strong></span></span></p> <x-slider id=\"slider-int\" steps=\"10\"></x-slider><p><span class=\"sentence\">int</span></p> </div> <div style=\"flex: 1; position: relative;\"> <svg class=\"content-center\" width=\"350\" height=\"350\"><defs><clipPath id=\"clippath\"><rect id=\"rect-float\" x=\"0\" y=\"156\" width=\"100%\" height=\"100%\"></rect></clipPath></defs><image id=\"peaceWater\" xlink:href=\"/resources/cvariables/images/water.png\" x=\"0\" y=\"0\" height=\"100%\" width=\"100%\" style=\"clip-path:url(#clippath);\"></image><image id=\"bucket\" xlink:href=\"/resources/cvariables/images/back-img-3.png\" x=\"0\" y=\"0\" height=\"100%\" width=\"100%\"></image></svg><p><span class=\"sentence\">x<sub>2</sub>&nbsp;=&nbsp;<span><strong id=\"span-float\">0.00</strong></span></span></p><x-slider id=\"slider-float\" steps=\"1000\"></x-slider><p><span class=\"sentence\">double</span></p> </div> <div style=\"flex:1;\"><svg class=\"content-center\" id=\"string-grid\" width=\"350\" height=\"350\"><defs><clipPath id=\"clipstring\"><rect id=\"rect\" x=\"0\" y=\"0\" width=\"30%\" height=\"100%\"></rect></clipPath></defs><image id=\"bucket\" xlink:href=\"/resources/cvariables/images/back-img-3.png\" x=\"0\" y=\"0\" height=\"100%\" width=\"100%\"></image><image class=\"logo\" id=\"logo\" xlink:href=\"/resources/cvariables/images/LOGO.png\" x=\"32%\" y=\"0\" height=\"100%\" width=\"100%\" style=\"clip-path:url(#clipstring);\"></image></svg><p><span class=\"sentence\">x<sub>3</sub>&nbsp;=&nbsp;<span><strong id=\"span-string\">\"\"</strong></span></span></p><x-slider id=\"slider-string\" steps=\"7\"></x-slider><p><span class=\"sentence\">string</span></p> </div> <div style=\"flex:1;\"><svg class=\"content-center\" id=\"boolean-grid\" width=\"350\" height=\"350\"><image id=\"bucket\" xlink:href=\"/resources/cvariables/images/back-img-3.png\" x=\"0\" y=\"0\" height=\"100%\" width=\"100%\"></image><image class=\"hide-lamp\" id=\"true-lamp\" xlink:href=\"/resources/cvariables/images/true_lamp.png\" x=\"45\" y=\"10\" width=\"100\" height=\"200\" alert=\"True\"></image><image id=\"false-lamp\" xlink:href=\"/resources/cvariables/images/false_lamp.png\" x=\"45\" y=\"10\" width=\"100\" height=\"200\" alert=\"True\"></image></svg><p><span class=\"sentence\">x<sub>4</sub>&nbsp;=&nbsp;<span><strong id=\"span-boolean\">False</strong></span></span></p> <div class=\"testswitch\"> <input class=\"testswitch-checkbox\" id=\"onoffswitch\" type=\"checkbox\"> <label class=\"testswitch-label\" for=\"onoffswitch\"> <span class=\"testswitch-inner\" data-on=\"开\" data-off=\"关\"></span> <span class=\"testswitch-switch\"></span> </label> </div> <p><span class=\"sentence\">bool</span></p> </div> </div></x-step>"},{"id":"declareaandinitializeavariable","section":"declareaandinitializeavariable","goals":["next-0"],"html":"<x-step id=\"declareaandinitializeavariable\" goals=\"next-0\"><p><span class=\"sentence\">上面也介绍了变量和数据类型了，下面我们要开始使用他们啦。</span></p><p><span class=\"sentence\">就像上面我们提到的 “贪吃蛇” ，它刚开始的时候，有个初始分数：0。那么我们怎么去保存贪吃蛇的分数值呢？贪吃蛇的分数需要用什么数据类型去保存呢？</span></p><p><span class=\"sentence\">此时就需要一个变量去保存它，并且是整数类型！</span></p><div class=\"row padded\"><div style=\"width: 600px\"> <x-img src=\"/resources/cvariables/images/init.jpg\" width=\"500\" height=\"500\"></x-img></div></div> <p><span class=\"sentence\"><button class=\"next-step\">Continue</button></span></p></x-step>"},{"id":"declareavariable","section":"declareaandinitializeavariable","goals":["blank-0","blank-1","blank-2","blank-3","blank-4","next-0"],"html":"<x-step id=\"declareavariable\" goals=\"blank-0 blank-1 blank-2 blank-3 blank-4 next-0\"><h2>声明变量</h2><p><span class=\"sentence\">我们要创造变量，需要两个知识点：</span></p><ul> <li><span class=\"sentence\"><p><span class=\"sentence\">变量的数据类型（比如：<code>int</code> ）。</span></p></span></li><li><span class=\"sentence\"><p><span class=\"sentence\">变量的名称（比如：<code>score</code> ）。</span></p></span></li></ul> <p><span class=\"sentence\">我们把贪吃蛇的分数，命名为 <code>score</code> 。那么我们可以这么声明：</span></p><pre class=\"language-c++\"><code>// 声明一个变量\nint score;</code></pre><p><span class=\"sentence\">这个变量名一定要叫 score 吗？当然可以声明别的名字，但是必须符合以下 <strong>命名规则：</strong></span></p><ul> <li><span class=\"sentence\"><p><span class=\"sentence\">在C++中，变量名只能用这三种类型：大小写字母（A、a...），数字（0、1、2...）、下划线（ _ ）。</span></p></span></li><li><span class=\"sentence\"><p><span class=\"sentence\">不能使用<strong>数字</strong>做变量名的<strong>首位</strong>。 </span></p></span></li><li><span class=\"sentence\"><p><span class=\"sentence\">变量名区分字母<strong>大小写</strong>。 </span></p></span></li><li><span class=\"sentence\"><p><span class=\"sentence\">不能使用C++的<strong>关键字</strong>做变量名。（比如：int，return，double）</span></p></span></li><li><span class=\"sentence\"><p><span class=\"sentence\">输出不用加双引号 <code>\"\"</code> 。 在我们输出的时候，直接写 <code>score</code> 就可以，不需要 <code>“score”</code> 这样写。（了解）</span></p></span></li></ul> <h4>随机测验：</h4><p><span class=\"sentence\"><code>_score</code> 是变量名吗？<x-blank><button class=\"choice\">是的</button><button class=\"choice\">不是</button></x-blank></span></p><p><span class=\"sentence\"><code>0score</code> 是变量名吗？<x-blank><button class=\"choice\">不是</button><button class=\"choice\">是的</button></x-blank></span></p><p><span class=\"sentence\"><code>score.#$%*!?</code> </span><span class=\"sentence\">能做变量名吗？<x-blank><button class=\"choice\">不能</button><button class=\"choice\">能</button></x-blank></span></p><p><span class=\"sentence\"><code>SCORE</code> 和 <code>score</code> 表示同一个变量名吗？<x-blank><button class=\"choice\">不是</button><button class=\"choice\">是的</button></x-blank></span></p><p><span class=\"sentence\"><code>int</code> 能做变量名吗？<x-blank><button class=\"choice\">不能</button><button class=\"choice\">能</button></x-blank></span></p><p><span class=\"sentence\">那么我们怎么声明多个变量呢（数据类型相同），此时可以这样写：</span></p><pre class=\"language-c++\"><code>// 声明多个变量\nint score, age;</code></pre><p><span class=\"sentence\">通过英文输入法的逗号，可以将多个变量名写下来，就声明成功了。</span></p><p><span class=\"sentence\"><button class=\"next-step\">Continue</button></span></p></x-step>"},{"id":"initializeavariable","section":"declareaandinitializeavariable","goals":["next-0"],"html":"<x-step id=\"initializeavariable\" goals=\"next-0\"><h2>为变量设置初始值</h2><p><span class=\"sentence\">我们声明了一个变量后，就可以给它设置一个初始值了！</span></p><p><span class=\"sentence\">我们给变量 <code>score</code> 一个初始值：0。</span></p><pre class=\"language-c++\"><code>//给变量一个初始值\nscore = 0;</code></pre><p><span class=\"sentence\">其中上面有三部分组成：</span></p><p><span class=\"sentence\"><code>score</code> 是变量的名称。</span></p><p><span class=\"sentence\"><code>0</code> 是给变量的值。</span></p><p><span class=\"sentence\"><code>=</code> 是给变量 <code>赋值</code> 的符号。（提示： <code>=</code> 在这里不是“等于”的意思，而是将右边的值，“赋值”给了变量，小朋友们要注意哦~）</span></p><p><span class=\"sentence\"><button class=\"next-step\">Continue</button></span></p></x-step>"},{"id":"declareainitializeavariable","section":"declareaandinitializeavariable","goals":[],"html":"<x-step id=\"declareainitializeavariable\" goals=\"\"><h2>声明并初始化变量</h2><p><span class=\"sentence\">我们了解了声明变量，以及为变量设置初始值，它们需要组合在一起使用：</span></p><pre class=\"language-c++\"><code>// 声明一个变量\nint score;\n\n// 给变量设置初始值\nscore = 0;</code></pre><p><span class=\"sentence\">其实也可以一句话把它们衔接起来，就是初始化变量：</span></p><pre class=\"language-c++\"><code>// 初始化变量\nint score = 0;</code></pre><p><span class=\"sentence\">这句话就是说，声明一个名为 <code>score</code> 的整型变量，并将它的初始值设置为 <code>0</code> 。</span></p><h4>使用说明</h4><p><span class=\"sentence\"><input id=\"declareaandinitializeavariable\" type=\"checkbox\" disabled=\"disabled\"> 1.在编辑器中，我们需要声明一个，名字为 <code>score</code> ，数据类型为 <code>int</code> 的变量</span></p><pre class=\"language-c++\"><code>// 声明一个变量\nint score;</code></pre><p><span class=\"sentence\"><input id=\"declareaandinitializeavariable\" type=\"checkbox\" disabled=\"disabled\"> 2.我们为分数设置一个初始值，值为0。</span></p><pre class=\"language-c++\"><code>// 给变量设置初始值\nscore = 0;</code></pre><p><span class=\"sentence\"><strong>提示</strong>：可以使用我们学过的一句话，也可以使用两句话，去声明和赋值变量。</span></p><pre class=\"language-c++\"><code>// 初始化变量\nint score = 0;</code></pre><p><span class=\"sentence\"><input id=\"declareaandinitializeavariable\" type=\"checkbox\" disabled=\"disabled\"> 3.写完后，点击编辑器的run，如果在运行结果窗口，没有提示错误的话，说明我们就声明并初始化成功啦。</span></p><div id=\"ide\"><pre class=\"initcode\">#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n\n   // code...\n   \n   \n   return 0;\n   \n}</pre><iframe src=\"http://114.116.82.25:7000/#/exercise?language=cpp\" scrolling=\"no\" style=\"width: 100%; height: 500px; border: none;\"></iframe></div></x-step>"},{"id":"arithmeticoperators","section":"arithmeticoperators","goals":[],"html":"<x-step id=\"arithmeticoperators\" goals=\"\"><p><span class=\"sentence\">我们在之前学习了变量和数据类型的知识。接下来学习一下算术运算符这一小节吧。</span></p><p><span class=\"sentence\">想必大家在数学课上，学会了加减乘除。其实计算机的算术运算符，就用到了我们学到的数学知识。</span></p><div class=\"row padded\"><div style=\"width: 600px\"> <x-img src=\"/resources/cvariables/images/math.jpg\" width=\"600\" height=\"400\"></x-img></div></div> <p><span class=\"sentence\">以下呢，是C++常见的算术运算符：</span></p><ul> <li><span class=\"sentence\"><code>+</code> 加</span></li></ul> <pre class=\"language-c++\"><code>int score = 0;\n// 分数初始值为 0\n\nscore = 4 + 2;\n// 结果等于 6</code></pre><ul> <li><span class=\"sentence\"><code>-</code> 减</span></li></ul> <pre class=\"language-c++\"><code>int score = 0;\n// 分数初始值为 0\n\nscore = 4 - 2;\n// 结果等于 2</code></pre><ul> <li><span class=\"sentence\"><code>*</code> 乘</span></li></ul> <pre class=\"language-c++\"><code>int score = 0;\n// 分数初始值为 0\n\nscore = 4 * 2;\n// 结果等于 8\n</code></pre><ul> <li><span class=\"sentence\"><code>/</code> 除 </span></li></ul> <pre class=\"language-c++\"><code>int score = 0;\n// 分数初始值为 0\n\nscore = 4 / 2;\n// 结果等于 2</code></pre><ul> <li><span class=\"sentence\"><code>%</code> 模/取余（比如：4个苹果分给3个人，每个人1个苹果，还剩下一个苹果，这就是余数，也就是我们取的余数，也叫做模）</span></li></ul> <pre class=\"language-c++\"><code>int score = 0;\n// 分数初始值为 0\n\nscore = 4 % 3;\n// 结果等于 1</code></pre><p><span class=\"sentence\"><strong>提示</strong> ：同学们能感觉到 <code>4 * (4 - 2)</code> ，和 <code>4 * 4 - 2</code> 的区别吗？ 我们可以添加括号 <code>()</code> 来优先计算括号里面的程序。</span></p><h4>使用说明</h4><p><span class=\"sentence\"><input id=\"arithmeticoperators\" type=\"checkbox\" disabled=\"disabled\"> 1.在贪吃蛇中，初始分数为0，名为 <code>score</code> </span></p><pre class=\"language-c++\"><code>int score = 0;</code></pre><p><span class=\"sentence\"><input id=\"arithmeticoperators\" type=\"checkbox\" disabled=\"disabled\"> 2.现在这条蛇吃了5个食物了（每次吃一个食物，分数就会加1）。它的分数现在变成多少啦？</span></p><pre class=\"language-c++\"><code>score = 0 + 5;</code></pre><p><span class=\"sentence\"><input id=\"arithmeticoperators\" type=\"checkbox\" disabled=\"disabled\"> 3.我们需要在运行结果窗口输出分数值，我们可以使用 <code>cout</code> ,输出分数。</span></p><pre class=\"language-c++\"><code>cout &lt;&lt; score &lt;&lt; \"\\n\";</code></pre><p><span class=\"sentence\"><input id=\"arithmeticoperators\" type=\"checkbox\" disabled=\"disabled\"> 2.写完后，点击编辑器的run，如果在运行结果窗口出现了结果5，说明我们成功的使用了算术运算符。</span></p><div id=\"ide\"><pre class=\"initcode\">#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n\n  int score = 0;\n\n  // code...\n\n  return 0;\n  \n}</pre><iframe src=\"http://114.116.82.25:7000/#/exercise?language=cpp\" scrolling=\"no\" style=\"width: 100%; height: 500px; border: none;\"></iframe></div></x-step>"},{"id":"chaining","section":"chaining","goals":[],"html":"<x-step id=\"chaining\" goals=\"\"><p><span class=\"sentence\">我们在玩 “贪吃蛇” 的游戏中，吃的食物越多，分数就越高。这个就可以简单的理解为——<strong>综合输出</strong>。</span></p><p><span class=\"sentence\">假如说我们现在玩贪吃蛇，得了5分，但是我需要有提示，比如加上一段 <code>您好，您的分数为：</code> ；在我的分数后面，再加上一个 <code>分</code> 的单位：</span></p><pre class=\"language-c++\"><code>您好，您的分数为：5 分</code></pre><p><span class=\"sentence\">我们可能会通过一个一个的 <code>cout</code> 来展示：</span></p><pre class=\"language-c++\"><code>int score = 5;\n\ncout &lt;&lt; \"您好，您的分数为：\";\ncout &lt;&lt; score;\ncout &lt;&lt; \" 分\\n\";</code></pre><p><span class=\"sentence\">它的输出结果是:</span></p><pre class=\"language-c++\"><code>您好，您的分数为：5 分</code></pre><p><span class=\"sentence\">我们可不可以对它做一个优化，只需要一行代码，就可以显示出来呢？ 答案是肯定可以的。</span></p><p><span class=\"sentence\">我们可以使用多个 <code>&lt;&lt;</code> 运算符，把他们连接在一起，就像下面这样：</span></p><pre class=\"language-c++\"><code>int score = 5;\n\ncout &lt;&lt; \"您好，您的分数为：\" &lt;&lt; score &lt;&lt; \" 分\\n\";</code></pre><p><span class=\"sentence\">此时就连成了一串，就称为综合输出。</span></p><p><span class=\"sentence\">可能有的同学会想到，为什么不能直接把 <code>score</code> 写到双引号里呢？就像 <code>“score”</code> 。这里要说一下，将变量直接写到双引号里，C++会将它原样输出，而不会将它当做变量，所以只能断开写。</span></p><h4>使用说明</h4><p><span class=\"sentence\"><input id=\"chaining\" type=\"checkbox\" disabled=\"disabled\"> 1.我们已经声明了一个变量，名为 <code>score</code> ，数据类型为 <code>int</code> ，初始值为5。</span></p><pre class=\"language-c++\"><code>int score = 5;\n\ncout &lt;&lt; \"您好，您的分数为：\" &lt;&lt; score &lt;&lt; \" 分\\n\";</code></pre><p><span class=\"sentence\"><input id=\"chaining\" type=\"checkbox\" disabled=\"disabled\"> 2.现在使用综合输出下面的内容：</span></p><pre class=\"language-c++\"><code>您的分数是: [score] 分</code></pre><p><span class=\"sentence\"><strong>注意</strong>： <code>[score]</code> 表示的是变量的具体分数。</span></p><pre class=\"language-c++\"><code>cout &lt;&lt; \"您好，您的分数为：\" &lt;&lt; score &lt;&lt; \" 分\\n\";</code></pre><p><span class=\"sentence\"><input id=\"chaining\" type=\"checkbox\" disabled=\"disabled\"> 3.写完后，点击编辑器的run，查看结果。</span></p><div id=\"ide\"><pre class=\"initcode\">#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n  \n  int score = 5;\n  \n   // code...\n\n  return 0;\n  \n}</pre><iframe src=\"http://114.116.82.25:7000/#/exercise?language=cpp\" scrolling=\"no\" style=\"width: 100%; height: 500px; border: none;\"></iframe></div></x-step>"},{"id":"userinput","section":"userinput","goals":[],"html":"<x-step id=\"userinput\" goals=\"\"><p><span class=\"sentence\">经过上面的学习，我们发现，变量的值都是直接定义好了，运行出来的。</span></p><p><span class=\"sentence\">接下来，我们来实现一下，在键盘上输入一些数据，将它展示出来。</span></p><p><span class=\"sentence\">同学们，我们玩游戏之前，是不是需要给自己起一个好听的名字，用来记录下我们的成绩啊？如下所示：</span></p><div class=\"row padded\"><div style=\"width: 600px\"> <x-img src=\"/resources/cvariables/images/tname.jpg\" width=\"500\" height=\"500\"></x-img></div></div> <p><span class=\"sentence\">而C++中，我们知道了，可以使用 <code>cout</code> 来<strong>输出</strong>数据；那<strong>输入</strong>数据怎么实现呢？通过 <code>cin</code> 可以实现，如下例：</span></p><pre class=\"language-c++\"><code>cout &lt;&lt; \"请输入您的名字: \";\ncin &gt;&gt; name;</code></pre><p><span class=\"sentence\">此时，应该有人发现了 <code>cin</code> （读音：see-in ） 后面跟着一个 <code>&gt;&gt;</code> ，它就代表着，每次输入一个数据，就给它保存起来。输入完成后，你可以按一下 <code>enter</code> 这样就完成了我们的输入啦。 </span></p><h4>使用说明</h4><p><span class=\"sentence\"><input id=\"userinput\" type=\"checkbox\" disabled=\"disabled\"> 1.我们在设计一款贪吃蛇游戏，希望能知道玩家的年龄，此时需要声明一个年龄 <code>age</code> 变量，数据类型为 <code>int</code> 。 </span></p><pre class=\"language-c++\"><code>int age;</code></pre><p><span class=\"sentence\"><input id=\"userinput\" type=\"checkbox\" disabled=\"disabled\"> 2.在运行结果窗口，最开始可以给一个提示：\"请输入你的年龄吧: </span><span class=\"sentence\">\"，并且可以让玩家输入年龄。</span></p><pre class=\"language-c++\"><code>cout &lt;&lt; \"请输入你的年龄吧: \";\ncin &gt;&gt; age;</code></pre><p><span class=\"sentence\"><input id=\"userinput\" type=\"checkbox\" disabled=\"disabled\"> 3.当玩家输入完成后，按下 <code>enter</code> 键，输出玩家的年龄。</span></p><pre class=\"language-c++\"><code>12</code></pre><p><span class=\"sentence\"><input id=\"userinput\" type=\"checkbox\" disabled=\"disabled\"> 4.写完程序后，点击编辑器的run，输入一个数字，然后按 <code>enter</code> 结束，查看一下结果。</span></p><div id=\"ide\"><pre class=\"initcode\">#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n  \n  // code...\n   \n  return 0;\n\n}</pre><iframe src=\"http://114.116.82.25:7000/#/exercise?language=cpp\" scrolling=\"no\" style=\"width: 100%; height: 500px; border: none;\"></iframe></div></x-step>"},{"id":"challengetemperature1","section":"challengetemperature1","goals":[],"html":"<x-step id=\"challengetemperature1\" goals=\"\"><p><span class=\"sentence\">曾经，有位疯狂的科学家，叫开尔文（ <x-bio xid=\"kelvin\">Kelvin</x-bio> ），有一次，他在山腰的气象实验室里，熟练地预测了天气。</span></p><p><span class=\"sentence\">最近，开尔文（Kelvin）开始在他的网站上，发布了天气预报，但是存在一个问题：他的所有天气预报，都以华氏（F）温度为单位，进行描述。</span></p><p><span class=\"sentence\">我们通常说温度，都是用的摄氏（C）。那么，我们通过计算机来实现它们的转换吧。</span></p><p><span class=\"sentence\">让我们将温度从华氏（F）转换为摄氏（C），是有个公式的。公式如下：</span></p><p><span class=\"sentence\">C=(F−32)/1.8</span></p><h4>使用说明</h4><p><span class=\"sentence\"><input id=\"challengetemperature1\" type=\"checkbox\" disabled=\"disabled\"> 1.首先，我们调查一下家乡的温度，是多少华氏温度的，并记下来。（例如：77.9）</span></p><pre class=\"language-c++\"><code>77.9</code></pre><p><span class=\"sentence\"><input id=\"challengetemperature1\" type=\"checkbox\" disabled=\"disabled\"> 2.此时我们需要两个变量，华氏温度（ <code>f</code> ）和摄氏温度（ <code>c</code> ）。因为温度，有可能是小数，所以我们采用 <code>double</code> 类型。</span></p><pre class=\"language-c++\"><code>double f; \ndouble c; </code></pre><p><span class=\"sentence\"><input id=\"challengetemperature1\" type=\"checkbox\" disabled=\"disabled\"> 3.将华氏温度（ <code>f</code> ），转换成摄氏温度（ <code>c</code> ），并且用摄氏温度保存变量的值。</span></p><pre class=\"language-c++\"><code>c = (f - 32) / 1.8;</code></pre><p><span class=\"sentence\"><input id=\"challengetemperature1\" type=\"checkbox\" disabled=\"disabled\"> 4.我们需要展示成下面这句话。</span></p><pre class=\"language-c++\"><code>此时的温度是 [c] 摄氏度。</code></pre><p><span class=\"sentence\">我们可以在这句话之后输入一个换行符 <code>\\n</code> ，它可以让我们的数据，单独占据一行哦~</span></p><p><span class=\"sentence\"><strong>提示：</strong></span></p><pre class=\"language-c++\"><code>cout &lt;&lt; \"您好，您的分数为：\" &lt;&lt; score &lt;&lt; \" 分\\n\";</code></pre><p><span class=\"sentence\"><input id=\"challengetemperature1\" type=\"checkbox\" disabled=\"disabled\"> 5.写完程序后，点击编辑器的run，查看结果。</span></p><div id=\"ide\"><pre class=\"initcode\">#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n  \n\n  \n    // code...\n\n    return 0;\n\n}</pre><iframe src=\"http://114.116.82.25:7000/#/exercise?language=cpp\" scrolling=\"no\" style=\"width: 100%; height: 500px; border: none;\"></iframe></div></x-step>"},{"id":"challengetemperature2","section":"challengetemperature2","goals":[],"html":"<x-step id=\"challengetemperature2\" goals=\"\"><p><span class=\"sentence\">在上面的例子中，我们假设，查到了家乡的华氏温度，为77.9。我们就直接赋值给了华氏温度变量 <code>f</code> 。如下代码：</span></p><pre class=\"language-c++\"><code>f = 77.9;</code></pre><p><span class=\"sentence\">现在我们需要改进上面的程序，需要在运行结果窗口，来输入一个值 ，赋值给华氏温度变量 <code>f</code> ，同学们想一想，怎么实现呢？</span></p><p><span class=\"sentence\"><strong>提示</strong>： 我们可以适当的加一些提示语，如 “请输入一个华氏温度值：” </span></p><h4>使用说明</h4><p><span class=\"sentence\"><input id=\"challengetemperature2\" type=\"checkbox\" disabled=\"disabled\"> 1.我们在运行结果窗口，加一个提示语 “请输入一个华氏温度值：” ，并且需要输入这个华氏温度值。</span></p><pre class=\"language-c++\"><code>cout &lt;&lt; \"请输入一个华氏温度值：\";\ncin &gt;&gt; f;</code></pre><p><span class=\"sentence\"><input id=\"challengetemperature2\" type=\"checkbox\" disabled=\"disabled\"> 2.写完程序后，点击编辑器的run，输入一个数字，然后按 <code>enter</code> 结束，查看一下结果。</span></p><div id=\"ide\"><pre class=\"initcode\">#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n  \n  double f;\n  double c;\n  \n  // code...\n\n  c = (f - 32) / 1.8;\n  \n  cout &lt;&lt; \"此时的温度是 \" &lt;&lt; c &lt;&lt; \" 摄氏度。\\n\";\n  \n  return 0;\n}</pre><iframe src=\"http://114.116.82.25:7000/#/exercise?language=cpp\" scrolling=\"no\" style=\"width: 100%; height: 500px; border: none;\"></iframe></div></x-step>"},{"id":"review","section":"review","goals":["blank-0","blank-1","blank-2","blank-3","blank-4"],"html":"<x-step id=\"review\" goals=\"blank-0 blank-1 blank-2 blank-3 blank-4\"><p><span class=\"sentence\">恭喜你，你已经完成了 <strong>变量</strong> 的学习。为你鼓鼓掌。🙌</span></p><p><span class=\"sentence\">我们来做一下课前的回顾吧：</span></p><ul> <li><span class=\"sentence\"><p><span class=\"sentence\">变量，就好比一个 “ 容器 ” ，而变量的值，就需要盛放在 “ 容器 ” 中。</span></p></span></li><li><span class=\"sentence\"><p><span class=\"sentence\">变量的命名规则：</span></p></span></li></ul> <p><span class=\"sentence\">在C++中，变量名只能用这三种类型：<x-blank><button class=\"choice\">大小写</button><button class=\"choice\">大</button><button class=\"choice\">小</button></x-blank>大小写字母（A、a...），数字（0、1、2...）、下划线（ _ ）。</span></p><p><span class=\"sentence\"><x-blank><button class=\"choice\">不能</button><button class=\"choice\">能</button></x-blank>使用<strong>数字</strong>做变量名的<strong>首位</strong>。 </span></p><p><span class=\"sentence\">变量名<x-blank><button class=\"choice\">区分</button><button class=\"choice\">不区分</button></x-blank>字母<strong>大小写</strong>。 </span></p><p><span class=\"sentence\"><x-blank><button class=\"choice\">不能</button><button class=\"choice\">能</button></x-blank>使用C++的<strong>关键字</strong>做变量名。（比如：int，return，double）</span></p><ul> <li><span class=\"sentence\">本章需要我们掌握的，C++基本数据类型：</span></li></ul> <p><span class=\"sentence\">整型 : </span><span class=\"sentence\"><code>int</code> (大小为4B) ; <code>long long</code> (大小为8B)</span></p><p><span class=\"sentence\">浮点型 : </span><span class=\"sentence\">_{code}double_（大小为8B） ; _{code}float_（大小为4B）</span></p><ul> <li><span class=\"sentence\"><p><span class=\"sentence\">一个等号 <code>=</code> 表示赋值。将右边的值，赋值给左边的变量。它并不是数学意义上的相等。</span></p></span></li><li><span class=\"sentence\"><p><span class=\"sentence\"><code>cin</code> 可以让用户输入数据，并且要搭配 <x-blank><button class=\"choice\">&gt;&gt;</button><button class=\"choice\">&lt;&lt;</button></x-blank> 。</span></p></span></li></ul> </x-step>"},{"id":"additionalquestions","section":"additionalquestions","goals":[],"html":"<x-step id=\"additionalquestions\" goals=\"\"><p><span class=\"sentence\">我们身体是不是健康的呢？我们都不确定，有的人说很健康，有的人却不健康，我们如果要科学的定义我们的身体健康程度，有一个词，大家应该了解一下这个词 ——— “身体质量指数（BMI）” 。BMI是一个，规范我们人体脂肪的标准公式。</span></p><p><span class=\"sentence\">这个词呢，是有一个公式的，如下所示：</span></p><x-img src=\"/resources/cvariables/images/bmi.png\" width=\"450\" height=\"270\"></x-img><p><span class=\"sentence\">它将通过人的体重（我们一般说人的体重是多少公斤，也就是多少kg，而这里就是使用了kg，作为单位），除以我们的 <code>身高的平方</code> 来计算（身高是用 m 来做计算的）。</span></p><h4>使用说明</h4><p><span class=\"sentence\"><input id=\"additionalquestions\" type=\"checkbox\" disabled=\"disabled\"> 1.首先，我们将自己的身高体重记录下来。（例如：身高：1.5米，体重52.5kg）</span></p><pre class=\"language-c++\"><code>1.5\n52.5</code></pre><p><span class=\"sentence\"><input id=\"additionalquestions\" type=\"checkbox\" disabled=\"disabled\"> 2.此时我们需要三个变量，身高（ <code>height</code> ）、体重（ <code>weight</code> ）和BMI健康值（ <code>bmi</code> ）。因为它们有可能是小数，所以我们采用 <code>double</code> 类型。（当然，变量名也可以自己起）</span></p><pre class=\"language-c++\"><code>double height,weight,bmi;</code></pre><p><span class=\"sentence\"><input id=\"additionalquestions\" type=\"checkbox\" disabled=\"disabled\"> 3.我们需要输入我们的身高和体重，赋值给对应的变量。</span></p><pre class=\"language-c++\"><code>cin &gt;&gt; height;\ncin &gt;&gt; weight;</code></pre><p><span class=\"sentence\">同学们可以想想，如何设置提示语呢？比如说“您的身高为：（单位为m）”，“您的体重为：（单位为kg）”</span></p><pre class=\"language-c++\"><code>cout &lt;&lt; \"您的身高为：（单位为m）\";\ncin &gt;&gt; height;\ncout &lt;&lt; \"您的体重为：（单位为kg）\";\ncin &gt;&gt; weight;</code></pre><p><span class=\"sentence\"><input id=\"additionalquestions\" type=\"checkbox\" disabled=\"disabled\"> 4.现在需要通过上面的公式计算bmi，来判断你是不是健康值啦？</span></p><pre class=\"language-c++\"><code>bmi = weight/height*height;</code></pre><p><span class=\"sentence\"><input id=\"additionalquestions\" type=\"checkbox\" disabled=\"disabled\"> 5.写完程序后，点击编辑器的run，查看结果。</span></p><p><span class=\"sentence\">完成下面的程序(你也可以直接运行该代码，我们为你提供了源代码)。</span></p><div id=\"ide\"><pre class=\"initcode\">#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n  \n  \n  // code...\n  \n  return 0;\n\n}</pre><iframe src=\"http://114.116.82.25:7000/#/exercise?language=cpp\" scrolling=\"no\" style=\"width: 100%; height: 500px; border: none;\"></iframe></div></x-step>"},{"id":"test","section":"test","goals":["blank-0","blank-1","blank-2","blank-3","blank-4","blank-5","blank-6","blank-7","blank-8","blank-9","blank-10","blank-11","blank-12","blank-13","blank-14","blank-15","blank-16","blank-17","blank-18"],"html":"<x-step id=\"test\" goals=\"blank-0 blank-1 blank-2 blank-3 blank-4 blank-5 blank-6 blank-7 blank-8 blank-9 blank-10 blank-11 blank-12 blank-13 blank-14 blank-15 blank-16 blank-17 blank-18\"><p><span class=\"sentence\"><strong>1.</strong> </span><span class=\"sentence\"><code>cin</code> 的作用是什么？</span></p><p><span class=\"sentence\">A.用于声明变量</span></p><p><span class=\"sentence\">B.用于编写注释</span></p><p><span class=\"sentence\">C.用于输出到运行结果窗口</span></p><p><span class=\"sentence\">D.用于从键盘中读取数据</span></p><p><span class=\"sentence\">答案：<x-blank><button class=\"choice\">D</button><button class=\"choice\">C</button><button class=\"choice\">B</button><button class=\"choice\">A</button></x-blank></span></p><p><span class=\"sentence\"><strong>2.</strong> </span><span class=\"sentence\">C++为什么要使用变量？</span></p><p><span class=\"sentence\">A.为了存储数据</span></p><p><span class=\"sentence\">B.为了记录代码</span></p><p><span class=\"sentence\">C.为了编译代码</span></p><p><span class=\"sentence\">D.为了在不同平台上使用</span></p><p><span class=\"sentence\">答案：<x-blank><button class=\"choice\">A</button><button class=\"choice\">C</button><button class=\"choice\">B</button><button class=\"choice\">D</button></x-blank></span></p><p><span class=\"sentence\"><strong>3.</strong> </span><span class=\"sentence\">division这个变量值为多少？</span></p><pre class=\"language-c++\"><code>int division;\ndivision = 24 / 8;</code></pre><p><span class=\"sentence\">A.0</span></p><p><span class=\"sentence\">B.1</span></p><p><span class=\"sentence\">C.2</span></p><p><span class=\"sentence\">D.3</span></p><p><span class=\"sentence\">答案：<x-blank><button class=\"choice\">D</button><button class=\"choice\">C</button><button class=\"choice\">B</button><button class=\"choice\">A</button></x-blank></span></p><p><span class=\"sentence\"><strong>4.</strong> </span><span class=\"sentence\">flag的数据类型是什么？</span></p><pre class=\"language-c++\"><code>bool flag = false;</code></pre><p><span class=\"sentence\">A.string</span></p><p><span class=\"sentence\">B.int</span></p><p><span class=\"sentence\">C.bool</span></p><p><span class=\"sentence\">D.double</span></p><p><span class=\"sentence\">答案：<x-blank><button class=\"choice\">C</button><button class=\"choice\">D</button><button class=\"choice\">B</button><button class=\"choice\">A</button></x-blank></span></p><p><span class=\"sentence\"><strong>5.</strong> </span><span class=\"sentence\">在下面的声明和初始化过程中，变量名是什么？</span></p><pre class=\"language-c++\"><code>int year = 2020;</code></pre><p><span class=\"sentence\">A.int</span></p><p><span class=\"sentence\">B.year</span></p><p><span class=\"sentence\">C.=</span></p><p><span class=\"sentence\">D.2020</span></p><p><span class=\"sentence\">答案：<x-blank><button class=\"choice\">B</button><button class=\"choice\">C</button><button class=\"choice\">D</button><button class=\"choice\">A</button></x-blank></span></p><p><span class=\"sentence\"><strong>6.</strong> </span><span class=\"sentence\">以下哪一个不符合变量名的规则？</span></p><p><span class=\"sentence\">A._cat</span></p><p><span class=\"sentence\">B.Camluni_2017</span></p><p><span class=\"sentence\">C.int</span></p><p><span class=\"sentence\">D.a</span></p><p><span class=\"sentence\">答案：<x-blank><button class=\"choice\">C</button><button class=\"choice\">D</button><button class=\"choice\">B</button><button class=\"choice\">A</button></x-blank></span></p><p><span class=\"sentence\"><strong>7.</strong> </span><span class=\"sentence\">运行下面代码，输入12，输出结果是什么？</span></p><pre class=\"language-c++\"><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n    int age;\n\n    cin &gt;&gt; age;\n\n    cout &lt;&lt; age &lt;&lt; \"岁\\n\";\n\n}</code></pre><p><span class=\"sentence\">A.12</span></p><p><span class=\"sentence\">B.12岁</span></p><p><span class=\"sentence\">C.12\"岁\"</span></p><p><span class=\"sentence\">D.12\"岁\\n\"</span></p><p><span class=\"sentence\">答案：<x-blank><button class=\"choice\">B</button><button class=\"choice\">C</button><button class=\"choice\">D</button><button class=\"choice\">A</button></x-blank></span></p><p><span class=\"sentence\"><strong>8.</strong> </span><span class=\"sentence\">运行下面代码，输出结果是什么？</span></p><pre class=\"language-c++\"><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n    int score;\n\n    score = 60 + 40;\n\n    cout &lt;&lt; \"您好，您的分数为：\";\n    cout &lt;&lt; score;\n    cout &lt;&lt; \" 分\\n\";\n\n}</code></pre><p><span class=\"sentence\">A.\"您好，您的分数为：\"score\" 分\"</span></p><p><span class=\"sentence\">B.\"您好，您的分数为：\"100\" 分\"</span></p><p><span class=\"sentence\">C.您好，您的分数为：60 + 40 分</span></p><p><span class=\"sentence\">D.您好，您的分数为：100 分</span></p><p><span class=\"sentence\">答案：<x-blank><button class=\"choice\">D</button><button class=\"choice\">C</button><button class=\"choice\">B</button><button class=\"choice\">A</button></x-blank></span></p><p><span class=\"sentence\"><strong>9.</strong> </span><span class=\"sentence\">运行结果是多少？</span></p><pre class=\"language-c++\"><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n\n    double price;\n    double num;\n    double total;\n\n    price = 1.20;\n    num = 2;\n    total = price * num;\n\n    cout &lt;&lt; total;\n\n}</code></pre><p><span class=\"sentence\">A.2.4</span></p><p><span class=\"sentence\">B.2.40</span></p><p><span class=\"sentence\">C.24</span></p><p><span class=\"sentence\">D.2</span></p><p><span class=\"sentence\">答案：<x-blank><button class=\"choice\">A</button><button class=\"choice\">C</button><button class=\"choice\">D</button><button class=\"choice\">B</button></x-blank></span></p><p><span class=\"sentence\"><strong>10.</strong> </span><span class=\"sentence\">那个不是C++的基本数据类型？</span></p><p><span class=\"sentence\">A.int</span></p><p><span class=\"sentence\">B.double</span></p><p><span class=\"sentence\">C.char</span></p><p><span class=\"sentence\">D.return</span></p><p><span class=\"sentence\">答案：<x-blank><button class=\"choice\">D</button><button class=\"choice\">A</button><button class=\"choice\">C</button><button class=\"choice\">B</button></x-blank></span></p><p><span class=\"sentence\"><strong>11.</strong> </span><span class=\"sentence\">以下哪一个符合变量名的规则？</span></p><p><span class=\"sentence\">A.apple!</span></p><p><span class=\"sentence\">B.2017Camluni</span></p><p><span class=\"sentence\">C.true</span></p><p><span class=\"sentence\">D._int</span></p><p><span class=\"sentence\">答案：<x-blank><button class=\"choice\">D</button><button class=\"choice\">C</button><button class=\"choice\">B</button><button class=\"choice\">A</button></x-blank></span></p><p><span class=\"sentence\"><strong>12.</strong> </span><span class=\"sentence\"><code>SCORE</code> 和 <code>score</code> 表示同一个变量名。 <x-blank><button class=\"choice\">错误</button><button class=\"choice\">正确</button></x-blank></span></p><p><span class=\"sentence\"><strong>13.</strong> </span><span class=\"sentence\">一旦变量名声明并初始化了，就不可以修改变量值了。 <x-blank><button class=\"choice\">错误</button><button class=\"choice\">正确</button></x-blank></span></p><p><span class=\"sentence\"><strong>14.</strong> </span><span class=\"sentence\">变量名可以同时声明并初始化。 <x-blank><button class=\"choice\">正确</button><button class=\"choice\">错误</button></x-blank></span></p><p><span class=\"sentence\"><strong>15.</strong> </span><span class=\"sentence\">1和1.0属于同一种数据类型。 <x-blank><button class=\"choice\">错误</button><button class=\"choice\">正确</button></x-blank></span></p><p><span class=\"sentence\"><strong>16.</strong> </span><span class=\"sentence\"><code> 1/2</code> 结果是<x-blank-input solution=\"0\"></x-blank-input>。</span></p><p><span class=\"sentence\"><strong>17.</strong> </span><span class=\"sentence\"><code> 1/2.0</code> 结果是<x-blank-input solution=\"0.5\"></x-blank-input>。</span></p><p><span class=\"sentence\"><strong>18.</strong> </span><span class=\"sentence\"><code> 10 % 3</code> 结果是<x-blank-input solution=\"1\"></x-blank-input>。</span></p><p><span class=\"sentence\"><strong>19.</strong> </span><span class=\"sentence\"><code> ( 2 * 2 + 2 - 1) % 2</code> 结果是<x-blank-input solution=\"1\"></x-blank-input>。</span></p></x-step>"}],"goals":35,"title":"变量"}